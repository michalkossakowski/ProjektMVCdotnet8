@using Microsoft.AspNetCore.Identity
@using ProjektMVCdotnet8.Areas.Identity.Data

@inject SignInManager<UserEntity> SignInManager
@inject UserManager<UserEntity> UserManager
@model IEnumerable<ProjektMVCdotnet8.Entities.PostEntity>
@{
    ViewData["Title"] = "CategoryIndex";
    List<string> followedUsers = TempData["FollowedUsers"] as List<string>;
}
<style>
    .awatar
    {
        height: 60px;
        width: 60px;
    }
</style>
<div class="row g-0">

    @foreach (var element in Model)
    {
        <div class="card border-3 mb-3 " style="width:100%">
            <div class="row g-0">
                <div class="col-md-4 border-3 border-end">
                    <img src="/attachments/@element.AttachmentSource" class="card-img-top"  alt="Alternate Text" />
                </div>
                <div class="col-md-8 d-flex flex-column">
                    <div class="card-header card-text d-flex flex-row sm-1">
                        <div class="sm-2">
                            <img src="/attachments/Septic_tank_PL.svg" class=" awatar rounded-circle img-fluid border border-2" alt="Alternate Text" />
                        </div>
                        <div class="p-2">
                            <small class="text-muted">Autor: @element.AuthorUser.Nick<br>@element.CreatedDate.ToString("MMMM dd, yyyy HH:mm") </small>
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@element.Title</h5>
                        <p class="card-text">@element.PostContent</p>
                    </div>
                    <div class="card-footer">
                        @if (SignInManager.IsSignedIn(User) && !element.AuthorUser.Id.Equals(UserManager.GetUserId(User))) 
                        {
                            <p card-text><a href="@Url.Action("Block", "Post", new { BlockedUserId = element.AuthorUser.Id.ToString(), CategoryName = TempData["CategoryName"]})">Blokuj</a></p>
                            @if (followedUsers.Contains(element.AuthorUser.Id.ToString()))
                            {
                                <p card-text><a href="@Url.Action("Unfollow", "Post", new { FollowedUserID = element.AuthorUser.Id.ToString(), CategoryName = TempData["CategoryName"]})">Przestań obserwować</a></p>
                            }
                            else 
                            { 
                                <p card-text><a href="@Url.Action("Follow", "Post", new { FollowedUserID = element.AuthorUser.Id.ToString(), CategoryName = TempData["CategoryName"]})">Obserwuj</a></p>
                            }
                        }
                        <p class="card-text  text-end"> <a href="/ReportPostEntities/Create?repPost=@element.Id">Zgłoś Post</a></p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

